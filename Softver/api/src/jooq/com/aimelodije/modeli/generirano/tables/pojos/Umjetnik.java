/*
 * This file is generated by jOOQ.
 */
package com.aimelodije.modeli.generirano.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Umjetnik implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String rola;
    private final String korime;
    private final String email;
    private final String lozinka;
    private final String ime;
    private final String prezime;
    private final String opis;
    private final String slika;
    private final LocalDate datumRegistracije;

    public Umjetnik(Umjetnik value) {
        this.id = value.id;
        this.rola = value.rola;
        this.korime = value.korime;
        this.email = value.email;
        this.lozinka = value.lozinka;
        this.ime = value.ime;
        this.prezime = value.prezime;
        this.opis = value.opis;
        this.slika = value.slika;
        this.datumRegistracije = value.datumRegistracije;
    }

    public Umjetnik(
        Long id,
        String rola,
        String korime,
        String email,
        String lozinka,
        String ime,
        String prezime,
        String opis,
        String slika,
        LocalDate datumRegistracije
    ) {
        this.id = id;
        this.rola = rola;
        this.korime = korime;
        this.email = email;
        this.lozinka = lozinka;
        this.ime = ime;
        this.prezime = prezime;
        this.opis = opis;
        this.slika = slika;
        this.datumRegistracije = datumRegistracije;
    }

    /**
     * Getter for <code>public.umjetnik.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.umjetnik.rola</code>.
     */
    public String getRola() {
        return this.rola;
    }

    /**
     * Getter for <code>public.umjetnik.korime</code>.
     */
    public String getKorime() {
        return this.korime;
    }

    /**
     * Getter for <code>public.umjetnik.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.umjetnik.lozinka</code>.
     */
    public String getLozinka() {
        return this.lozinka;
    }

    /**
     * Getter for <code>public.umjetnik.ime</code>.
     */
    public String getIme() {
        return this.ime;
    }

    /**
     * Getter for <code>public.umjetnik.prezime</code>.
     */
    public String getPrezime() {
        return this.prezime;
    }

    /**
     * Getter for <code>public.umjetnik.opis</code>.
     */
    public String getOpis() {
        return this.opis;
    }

    /**
     * Getter for <code>public.umjetnik.slika</code>.
     */
    public String getSlika() {
        return this.slika;
    }

    /**
     * Getter for <code>public.umjetnik.datum_registracije</code>.
     */
    public LocalDate getDatumRegistracije() {
        return this.datumRegistracije;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Umjetnik other = (Umjetnik) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.rola == null) {
            if (other.rola != null)
                return false;
        }
        else if (!this.rola.equals(other.rola))
            return false;
        if (this.korime == null) {
            if (other.korime != null)
                return false;
        }
        else if (!this.korime.equals(other.korime))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.lozinka == null) {
            if (other.lozinka != null)
                return false;
        }
        else if (!this.lozinka.equals(other.lozinka))
            return false;
        if (this.ime == null) {
            if (other.ime != null)
                return false;
        }
        else if (!this.ime.equals(other.ime))
            return false;
        if (this.prezime == null) {
            if (other.prezime != null)
                return false;
        }
        else if (!this.prezime.equals(other.prezime))
            return false;
        if (this.opis == null) {
            if (other.opis != null)
                return false;
        }
        else if (!this.opis.equals(other.opis))
            return false;
        if (this.slika == null) {
            if (other.slika != null)
                return false;
        }
        else if (!this.slika.equals(other.slika))
            return false;
        if (this.datumRegistracije == null) {
            if (other.datumRegistracije != null)
                return false;
        }
        else if (!this.datumRegistracije.equals(other.datumRegistracije))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.rola == null) ? 0 : this.rola.hashCode());
        result = prime * result + ((this.korime == null) ? 0 : this.korime.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.lozinka == null) ? 0 : this.lozinka.hashCode());
        result = prime * result + ((this.ime == null) ? 0 : this.ime.hashCode());
        result = prime * result + ((this.prezime == null) ? 0 : this.prezime.hashCode());
        result = prime * result + ((this.opis == null) ? 0 : this.opis.hashCode());
        result = prime * result + ((this.slika == null) ? 0 : this.slika.hashCode());
        result = prime * result + ((this.datumRegistracije == null) ? 0 : this.datumRegistracije.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Umjetnik (");

        sb.append(id);
        sb.append(", ").append(rola);
        sb.append(", ").append(korime);
        sb.append(", ").append(email);
        sb.append(", ").append(lozinka);
        sb.append(", ").append(ime);
        sb.append(", ").append(prezime);
        sb.append(", ").append(opis);
        sb.append(", ").append(slika);
        sb.append(", ").append(datumRegistracije);

        sb.append(")");
        return sb.toString();
    }
}
