/*
 * This file is generated by jOOQ.
 */
package com.aimelodije.modeli.generirano.tables.records;


import com.aimelodije.modeli.generirano.tables.Album;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumRecord extends UpdatableRecordImpl<AlbumRecord> implements Record6<Long, Long, String, String, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.album.id</code>.
     */
    public AlbumRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.album.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.album.umjetnik_id</code>.
     */
    public AlbumRecord setUmjetnikId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.album.umjetnik_id</code>.
     */
    public Long getUmjetnikId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.album.slika</code>.
     */
    public AlbumRecord setSlika(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.album.slika</code>.
     */
    public String getSlika() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.album.naziv</code>.
     */
    public AlbumRecord setNaziv(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.album.naziv</code>.
     */
    public String getNaziv() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.album.datum_dodano</code>.
     */
    public AlbumRecord setDatumDodano(LocalDate value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.album.datum_dodano</code>.
     */
    public LocalDate getDatumDodano() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.album.opis</code>.
     */
    public AlbumRecord setOpis(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.album.opis</code>.
     */
    public String getOpis() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, String, String, LocalDate, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, String, String, LocalDate, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Album.ALBUM.ID;
    }

    @Override
    public Field<Long> field2() {
        return Album.ALBUM.UMJETNIK_ID;
    }

    @Override
    public Field<String> field3() {
        return Album.ALBUM.SLIKA;
    }

    @Override
    public Field<String> field4() {
        return Album.ALBUM.NAZIV;
    }

    @Override
    public Field<LocalDate> field5() {
        return Album.ALBUM.DATUM_DODANO;
    }

    @Override
    public Field<String> field6() {
        return Album.ALBUM.OPIS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUmjetnikId();
    }

    @Override
    public String component3() {
        return getSlika();
    }

    @Override
    public String component4() {
        return getNaziv();
    }

    @Override
    public LocalDate component5() {
        return getDatumDodano();
    }

    @Override
    public String component6() {
        return getOpis();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUmjetnikId();
    }

    @Override
    public String value3() {
        return getSlika();
    }

    @Override
    public String value4() {
        return getNaziv();
    }

    @Override
    public LocalDate value5() {
        return getDatumDodano();
    }

    @Override
    public String value6() {
        return getOpis();
    }

    @Override
    public AlbumRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AlbumRecord value2(Long value) {
        setUmjetnikId(value);
        return this;
    }

    @Override
    public AlbumRecord value3(String value) {
        setSlika(value);
        return this;
    }

    @Override
    public AlbumRecord value4(String value) {
        setNaziv(value);
        return this;
    }

    @Override
    public AlbumRecord value5(LocalDate value) {
        setDatumDodano(value);
        return this;
    }

    @Override
    public AlbumRecord value6(String value) {
        setOpis(value);
        return this;
    }

    @Override
    public AlbumRecord values(Long value1, Long value2, String value3, String value4, LocalDate value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumRecord
     */
    public AlbumRecord() {
        super(Album.ALBUM);
    }

    /**
     * Create a detached, initialised AlbumRecord
     */
    public AlbumRecord(Long id, Long umjetnikId, String slika, String naziv, LocalDate datumDodano, String opis) {
        super(Album.ALBUM);

        setId(id);
        setUmjetnikId(umjetnikId);
        setSlika(slika);
        setNaziv(naziv);
        setDatumDodano(datumDodano);
        setOpis(opis);
    }

    /**
     * Create a detached, initialised AlbumRecord
     */
    public AlbumRecord(com.aimelodije.modeli.generirano.tables.pojos.Album value) {
        super(Album.ALBUM);

        if (value != null) {
            setId(value.getId());
            setUmjetnikId(value.getUmjetnikId());
            setSlika(value.getSlika());
            setNaziv(value.getNaziv());
            setDatumDodano(value.getDatumDodano());
            setOpis(value.getOpis());
        }
    }
}
