/*
 * This file is generated by jOOQ.
 */
package com.aimelodije.modeli.generirano.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumMelodija implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long albumId;
    private final Long melodijaId;

    public AlbumMelodija(AlbumMelodija value) {
        this.albumId = value.albumId;
        this.melodijaId = value.melodijaId;
    }

    public AlbumMelodija(
        Long albumId,
        Long melodijaId
    ) {
        this.albumId = albumId;
        this.melodijaId = melodijaId;
    }

    /**
     * Getter for <code>public.album_melodija.album_id</code>.
     */
    public Long getAlbumId() {
        return this.albumId;
    }

    /**
     * Getter for <code>public.album_melodija.melodija_id</code>.
     */
    public Long getMelodijaId() {
        return this.melodijaId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AlbumMelodija other = (AlbumMelodija) obj;
        if (this.albumId == null) {
            if (other.albumId != null)
                return false;
        }
        else if (!this.albumId.equals(other.albumId))
            return false;
        if (this.melodijaId == null) {
            if (other.melodijaId != null)
                return false;
        }
        else if (!this.melodijaId.equals(other.melodijaId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.albumId == null) ? 0 : this.albumId.hashCode());
        result = prime * result + ((this.melodijaId == null) ? 0 : this.melodijaId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AlbumMelodija (");

        sb.append(albumId);
        sb.append(", ").append(melodijaId);

        sb.append(")");
        return sb.toString();
    }
}
