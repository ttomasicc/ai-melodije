/*
 * This file is generated by jOOQ.
 */
package com.aimelodije.modeli.generirano.tables.records;


import com.aimelodije.modeli.generirano.tables.AlbumMelodija;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumMelodijaRecord extends UpdatableRecordImpl<AlbumMelodijaRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.album_melodija.album_id</code>.
     */
    public AlbumMelodijaRecord setAlbumId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.album_melodija.album_id</code>.
     */
    public Long getAlbumId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.album_melodija.melodija_id</code>.
     */
    public AlbumMelodijaRecord setMelodijaId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.album_melodija.melodija_id</code>.
     */
    public Long getMelodijaId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AlbumMelodija.ALBUM_MELODIJA.ALBUM_ID;
    }

    @Override
    public Field<Long> field2() {
        return AlbumMelodija.ALBUM_MELODIJA.MELODIJA_ID;
    }

    @Override
    public Long component1() {
        return getAlbumId();
    }

    @Override
    public Long component2() {
        return getMelodijaId();
    }

    @Override
    public Long value1() {
        return getAlbumId();
    }

    @Override
    public Long value2() {
        return getMelodijaId();
    }

    @Override
    public AlbumMelodijaRecord value1(Long value) {
        setAlbumId(value);
        return this;
    }

    @Override
    public AlbumMelodijaRecord value2(Long value) {
        setMelodijaId(value);
        return this;
    }

    @Override
    public AlbumMelodijaRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumMelodijaRecord
     */
    public AlbumMelodijaRecord() {
        super(AlbumMelodija.ALBUM_MELODIJA);
    }

    /**
     * Create a detached, initialised AlbumMelodijaRecord
     */
    public AlbumMelodijaRecord(Long albumId, Long melodijaId) {
        super(AlbumMelodija.ALBUM_MELODIJA);

        setAlbumId(albumId);
        setMelodijaId(melodijaId);
    }

    /**
     * Create a detached, initialised AlbumMelodijaRecord
     */
    public AlbumMelodijaRecord(com.aimelodije.modeli.generirano.tables.pojos.AlbumMelodija value) {
        super(AlbumMelodija.ALBUM_MELODIJA);

        if (value != null) {
            setAlbumId(value.getAlbumId());
            setMelodijaId(value.getMelodijaId());
        }
    }
}
